{"version":3,"sources":["store/actionCreators.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","utils/api.ts","constants/api.ts","App.tsx","store/rootReducer.ts","store/store.ts","index.tsx"],"names":["ActionTypes","getLoading","state","isLoading","getTodos","todos","mapDispatchToProps","deleteTodo","value","type","SET_DELETE","payload","TodoItem","connect","props","todo","id","user","title","completed","deleteTodoTemplate","handleDelete","useCallback","className","name","onClick","sortById","SORT_BY_ID","sortByName","SORT_BY_NAME","sortByTitle","SORT_BY_TITLE","sortByStatus","SORT_BY_STATUS","TodoList","map","key","getDataFromServer","url","a","fetch","data","json","getUsers","users","getToddos","getTodosWithUser","Promise","all","todosWithUser","find","person","userId","setLoading","SET_LOADING","setTodos","SET_TODOS","setLoadingTemplate","setTodosTemplate","handleStart","visibleTodos","length","initialState","store","createStore","action","filter","item","sort","b","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d78a5d7c.chunk.js","sourcesContent":["import { State, TodoWithUser } from '../constants/types';\n\n\nexport enum ActionTypes {\n  SET_DELETE = 'SET_DELETE',\n  SET_LOADING = 'SET_LOADING',\n  SET_TODOS = 'SET_TODOS',\n  SORT_BY_ID = 'SORT_BY_ID',\n  SORT_BY_NAME = 'SORT_BY_NAME',\n  SORT_BY_STATUS = 'SORT_BY_STATUS',\n  SORT_BY_TITLE = 'SORT_BY_TITLE',\n}\n\nexport const setTodos = (value: TodoWithUser[]) => ({\n  type: ActionTypes.SET_TODOS,\n  payload: value,\n});\nexport const setLoading = (value: boolean) => ({\n  type: ActionTypes.SET_LOADING,\n  payload: value,\n});\nexport const deleteTodo = (value: number) => ({\n  type: ActionTypes.SET_DELETE,\n  payload: value,\n});\nexport const sortByTitle = () => ({\n  type: ActionTypes.SORT_BY_TITLE,\n});\nexport const sortByName = () => ({\n  type: ActionTypes.SORT_BY_NAME,\n});\nexport const sortById = () => ({\n  type: ActionTypes.SORT_BY_ID,\n});\nexport const sortByStatus = () => ({\n  type: ActionTypes.SORT_BY_STATUS,\n});\n\nexport const getLoading = (state: State) => state.isLoading;\nexport const getTodos = (state: State) => state.todos;\n","import React, { FC, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { TodoWithUser } from '../../constants/types';\nimport { deleteTodo } from '../../store/actionCreators';\n\n\ninterface Props {\n  todo: TodoWithUser;\n  deleteTodo: (id: number) => void;\n}\n\nexport const TodoItemTemplate: FC<Props> = (props) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = props.todo;\n  const { deleteTodo: deleteTodoTemplate } = props;\n\n  const handleDelete = useCallback(() => {\n    deleteTodoTemplate(id);\n  },\n  [deleteTodoTemplate, id]);\n\n  return (\n    <tr className=\"tr\">\n      <td className=\"td\">{id}</td>\n      <td className=\"td\">{title}</td>\n      <td className=\"td\">{completed ? 'YES' : 'NO'}</td>\n      <td className=\"td\">{user.name}</td>\n      <td className=\"td\">\n        <button\n          type=\"button\"\n          className=\"button button-delete\"\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst mapDispatchToProps = { deleteTodo };\n\nexport const TodoItem = connect(null, mapDispatchToProps)(TodoItemTemplate);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { TodoWithUser, State } from '../../constants/types';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport {\n  getTodos,\n  sortById,\n  sortByName,\n  sortByStatus,\n  sortByTitle,\n} from '../../store/actionCreators';\n\ninterface Props {\n  todos: TodoWithUser[];\n  sortByTitle: () => void;\n  sortByName: () => void;\n  sortByStatus: () => void;\n  sortById: () => void;\n}\n\nexport const TodoListTemplate: FC<Props> = (props) => {\n  const { todos } = props;\n  return (\n    <table className=\"table is-hoverable\">\n      <thead className=\"thead\">\n        <tr className=\"tr\">\n          <th className=\"th\" onClick={props.sortById}>id</th>\n          <th className=\"th\" onClick={props.sortByTitle}>title</th>\n          <th className=\"th\" onClick={props.sortByStatus}>completed</th>\n          <th className=\"th\" onClick={props.sortByName}>user</th>\n          <th className=\"th\">Delete option</th>\n        </tr>\n      </thead>\n      <tbody className=\"tbody\">\n        {todos.map((todo: TodoWithUser) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapDispatchToProps = {\n  sortById,\n  sortByName,\n  sortByTitle,\n  sortByStatus,\n};\n\nconst mapStateToProps = (state: State) => ({\n  todos: getTodos(state),\n});\n\nexport const TodoList = connect(mapStateToProps, mapDispatchToProps)(TodoListTemplate);\n","import { USERS_URL, TOODS_URL, BASE_URL } from '../constants/api';\nimport {\n  Todo,\n  UserInterface,\n  TodoWithUser,\n} from '../constants/types';\n\nconst getDataFromServer = async <T>(url: string): Promise<T> => {\n  const data = await fetch(`${BASE_URL}${url}`);\n\n  return data.json();\n};\n\nconst getUsers: () => Promise<UserInterface[]> = async () => {\n  const users = await getDataFromServer<UserInterface[]>(USERS_URL);\n\n  return users;\n};\n\nconst getToddos: () => Promise<Todo[]> = async () => {\n  const todos = await getDataFromServer<Todo[]>(TOODS_URL);\n\n  return todos;\n};\n\nexport const getTodosWithUser: () => Promise<TodoWithUser[]> = async () => {\n  const [todos, users] = await Promise.all([\n    getToddos(),\n    getUsers(),\n  ]);\n\n  const todosWithUser = todos.map((todo: Todo) => {\n    const user = users\n      .find((person: UserInterface) => person.id === todo.userId) as UserInterface;\n\n    return {\n      ...todo,\n      user,\n    };\n  });\n\n  return todosWithUser;\n};\n","export const BASE_URL = 'https://jsonplaceholder.typicode.com';\nexport const USERS_URL = '/users';\nexport const TOODS_URL = '/todos';\n","import React, { FC } from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css';\nimport { connect } from 'react-redux';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { getTodosWithUser } from './utils/api';\nimport { State, TodoWithUser } from './constants/types';\nimport {\n  getLoading,\n  getTodos,\n  setLoading,\n  setTodos,\n} from './store/actionCreators';\n\n\ninterface Props {\n  todos: TodoWithUser[];\n  isLoading: boolean;\n  setLoading: (value: boolean) => void;\n  setTodos: (value: TodoWithUser[]) => void;\n}\n\nconst App: FC<Props> = (props) => {\n  const {\n    isLoading,\n    todos,\n    setLoading: setLoadingTemplate,\n    setTodos: setTodosTemplate,\n  } = props;\n\n  const handleStart = async () => {\n    setLoadingTemplate(true);\n\n    const visibleTodos = await getTodosWithUser();\n\n    setTodosTemplate(visibleTodos);\n    setLoadingTemplate(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Dynamic list of TODOs</h1>\n      {!todos.length ? (\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={handleStart}\n        >\n          {isLoading ? 'Loading.......' : 'Start load'}\n        </button>\n      ) : (\n        <TodoList />\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = { setLoading, setTodos };\n\nconst mapStateToProps = (state: State) => ({\n  todos: getTodos(state),\n  isLoading: getLoading(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { AnyAction } from 'redux';\nimport { State } from '../constants/types';\nimport { ActionTypes } from './actionCreators';\n\nexport const initialState: State = {\n  todos: [],\n  isLoading: false,\n};\nexport const rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_TODOS:\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    case ActionTypes.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    case ActionTypes.SET_DELETE:\n      return {\n        ...state,\n        todos: [...state.todos].filter(item => item.id !== action.payload),\n      };\n    case ActionTypes.SORT_BY_TITLE:\n      return {\n        ...state,\n        todos: [...state.todos]\n          .sort((a, b) => a.title.localeCompare(b.title)),\n      };\n    case ActionTypes.SORT_BY_STATUS:\n      return {\n        ...state,\n        todos: [...state.todos]\n          .sort((a, b) => Number(a.completed) - Number(b.completed)),\n      };\n    case ActionTypes.SORT_BY_NAME:\n      return {\n        ...state,\n        todos: [...state.todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)),\n      };\n    case ActionTypes.SORT_BY_ID:\n      return {\n        ...state,\n        todos: [...state.todos].sort((a, b) => a.id - b.id),\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport { initialState, rootReducer } from './rootReducer';\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}