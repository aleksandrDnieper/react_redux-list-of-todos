{"version":3,"sources":["store/actionCreators.ts","store/constants.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","utils/api.ts","constants/api.ts","App.tsx","store/reduser.ts","store/store.ts","index.tsx"],"names":["deleteTodo","value","type","getLoading","state","isLoading","getTodos","todos","mapDispatchToProps","TodoItem","connect","props","todo","id","user","title","completed","handleDelete","useCallback","className","name","onClick","sortById","sortByName","sortByTitle","sortByStatus","TodoList","map","key","getDataFromServer","url","a","fetch","data","json","getUsers","users","getToddos","getTodosWithUser","Promise","all","todosWithUser","find","person","userId","setLoading","setTodos","handleStart","visibleTodos","length","initialState","store","createStore","action","filter","item","sort","b","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e7492e9.chunk.js","sourcesContent":["import {\n  SET_DELETE,\n  SET_LOADING,\n  SET_TODOS,\n  SORT_BY_ID,\n  SORT_BY_NAME,\n  SORT_BY_STATUS,\n  SORT_BY_TITLE,\n} from './constants';\nimport { State, TodoWithUser } from '../constants/types';\n\nexport const setTodos = (value: TodoWithUser[]) => ({\n  type: SET_TODOS,\n  value,\n});\nexport const setLoading = (value: boolean) => ({\n  type: SET_LOADING,\n  value,\n});\nexport const deleteTodo = (value: number) => ({\n  type: SET_DELETE,\n  value,\n});\nexport const sortByTitle = () => ({\n  type: SORT_BY_TITLE,\n});\nexport const sortByName = () => ({\n  type: SORT_BY_NAME,\n});\nexport const sortById = () => ({\n  type: SORT_BY_ID,\n});\nexport const sortByStatus = () => ({\n  type: SORT_BY_STATUS,\n});\n\nexport const getLoading = (state: State) => state.isLoading;\nexport const getTodos = (state: State) => state.todos;\n","export const SET_TODOS = 'SET_TODOS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_DELETE = 'SET_DELETE';\nexport const SORT_BY_TITLE = 'SORT_BY_TITLE';\nexport const SORT_BY_NAME = 'SORT_BY_NAME';\nexport const SORT_BY_ID = 'SORT_BY_ID';\nexport const SORT_BY_STATUS = 'SORT_BY_STATUS';\n","import React, { FC, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { TodoWithUser } from '../../constants/types';\nimport { deleteTodo } from '../../store/actionCreators';\n\ninterface Props {\n  todo: TodoWithUser;\n  deleteTodo: (id: number) => void;\n}\n\nexport const TodoItemTemplate: FC<Props> = (props) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = props.todo;\n\n  const handleDelete = useCallback(() => {\n    props.deleteTodo(id);\n  },\n  [deleteTodo, id]);\n\n  return (\n    <tr className=\"tr\">\n      <td className=\"td\">{id}</td>\n      <td className=\"td\">{title}</td>\n      <td className=\"td\">{completed ? 'YES' : 'NO'}</td>\n      <td className=\"td\">{user.name}</td>\n      <td className=\"td\">\n        <button\n          type=\"button\"\n          className=\"button button-delete\"\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst mapDispatchToProps = { deleteTodo };\n\nexport const TodoItem = connect(null, mapDispatchToProps)(TodoItemTemplate);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { TodoWithUser, State } from '../../constants/types';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport {\n  getTodos,\n  sortById,\n  sortByName,\n  sortByStatus,\n  sortByTitle,\n} from '../../store/actionCreators';\n\ninterface Props {\n  todos: TodoWithUser[];\n  sortByTitle: () => void;\n  sortByName: () => void;\n  sortByStatus: () => void;\n  sortById: () => void;\n}\n\nexport const TodoListTemplate: FC<Props> = (props) => {\n  const { todos } = props;\n  return (\n    <table className=\"table is-hoverable\">\n      <thead className=\"thead\">\n        <tr className=\"tr\">\n          <th className=\"th\" onClick={props.sortById}>id</th>\n          <th className=\"th\" onClick={props.sortByTitle}>title</th>\n          <th className=\"th\" onClick={props.sortByStatus}>completed</th>\n          <th className=\"th\" onClick={props.sortByName}>user</th>\n          <th className=\"th\">Delete option</th>\n        </tr>\n      </thead>\n      <tbody className=\"tbody\">\n        {todos.map((todo: TodoWithUser) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapDispatchToProps = {\n  sortById,\n  sortByName,\n  sortByTitle,\n  sortByStatus,\n};\n\nconst mapStateToProps = (state: State) => ({\n  todos: getTodos(state),\n});\n\nexport const TodoList = connect(mapStateToProps, mapDispatchToProps)(TodoListTemplate);\n","import { USERS_URL, TOODS_URL, BASE_URL } from '../constants/api';\nimport {\n  Todo,\n  UserInterface,\n  TodoWithUser,\n} from '../constants/types';\n\nconst getDataFromServer = async <T>(url: string): Promise<T> => {\n  const data = await fetch(`${BASE_URL}${url}`);\n\n  return data.json();\n};\n\nconst getUsers: () => Promise<UserInterface[]> = async () => {\n  const users = await getDataFromServer<UserInterface[]>(USERS_URL);\n\n  return users;\n};\n\nconst getToddos: () => Promise<Todo[]> = async () => {\n  const todos = await getDataFromServer<Todo[]>(TOODS_URL);\n\n  return todos;\n};\n\nexport const getTodosWithUser: () => Promise<TodoWithUser[]> = async () => {\n  const [todos, users] = await Promise.all([\n    getToddos(),\n    getUsers(),\n  ]);\n\n  const todosWithUser = todos.map((todo: Todo) => {\n    const user = users\n      .find((person: UserInterface) => person.id === todo.userId) as UserInterface;\n\n    return {\n      ...todo,\n      user,\n    };\n  });\n\n  return todosWithUser;\n};\n","export const BASE_URL = 'https://jsonplaceholder.typicode.com';\nexport const USERS_URL = '/users';\nexport const TOODS_URL = '/todos';\n","import React, { FC } from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css';\nimport { connect } from 'react-redux';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { getTodosWithUser } from './utils/api';\nimport { State, TodoWithUser } from './constants/types';\nimport {\n  getLoading,\n  getTodos,\n  setLoading,\n  setTodos,\n} from './store/actionCreators';\n\n\ninterface Props {\n  todos: TodoWithUser[];\n  isLoading: boolean;\n  setLoading: (value: boolean) => void;\n  setTodos: (value: TodoWithUser[]) => void;\n}\n\nconst App: FC<Props> = (props) => {\n  const {\n    isLoading,\n    todos,\n  } = props;\n\n  const handleStart = async () => {\n    props.setLoading(true);\n\n    const visibleTodos = await getTodosWithUser();\n\n    props.setTodos(visibleTodos);\n    props.setLoading(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Dynamic list of TODOs</h1>\n      {!todos.length ? (\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={handleStart}\n        >\n          {isLoading ? 'Loading.......' : 'Start load'}\n        </button>\n      ) : (\n        <TodoList />\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = { setLoading, setTodos };\n\nconst mapStateToProps = (state: State) => ({\n  todos: getTodos(state),\n  isLoading: getLoading(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { AnyAction } from 'redux';\nimport { State } from '../constants/types';\nimport {\n  SET_DELETE,\n  SET_LOADING,\n  SET_TODOS,\n  SORT_BY_ID,\n  SORT_BY_NAME,\n  SORT_BY_STATUS,\n  SORT_BY_TITLE,\n} from './constants';\n\nexport const initialState: State = {\n  todos: [],\n  isLoading: false,\n};\nexport const reduser = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.value,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.value,\n      };\n    case SET_DELETE:\n      return {\n        ...state,\n        todos: [...state.todos].filter(item => item.id !== action.value),\n      };\n    case SORT_BY_TITLE:\n      return {\n        ...state,\n        todos: [...state.todos]\n          .sort((a, b) => a.title.localeCompare(b.title)),\n      };\n    case SORT_BY_STATUS:\n      return {\n        ...state,\n        todos: [...state.todos]\n          .sort((a, b) => Number(a.completed) - Number(b.completed)),\n      };\n    case SORT_BY_NAME:\n      return {\n        ...state,\n        todos: [...state.todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)),\n      };\n    case SORT_BY_ID:\n      return {\n        ...state,\n        todos: [...state.todos].sort((a, b) => a.id - b.id),\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport { initialState, reduser } from './reduser';\n\nexport const store = createStore(\n  reduser,\n  initialState,\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}